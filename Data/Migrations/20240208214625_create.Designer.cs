// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240208214625_create")]
    partial class create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.25");

            modelBuilder.Entity("Data.Entities.BranchEntity", b =>
                {
                    b.Property<int>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("BranchId");

                    b.ToTable("branches");

                    b.HasData(
                        new
                        {
                            BranchId = 1,
                            Title = "WSEI"
                        },
                        new
                        {
                            BranchId = 2,
                            Title = "BackHouse"
                        });
                });

            modelBuilder.Entity("Data.Entities.EmployeeEntity", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BranchId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateOfDismissal")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfEmployment")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("PESEL")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Position")
                        .HasColumnType("INTEGER");

                    b.HasKey("EmployeeId");

                    b.HasIndex("BranchId");

                    b.ToTable("employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            BranchId = 1,
                            DateOfEmployment = new DateTime(2000, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "adam@wsei.edu.pl",
                            LastName = "Nowak",
                            Name = "Adam",
                            PESEL = "12345678901",
                            Phone = "123456789",
                            Position = 1
                        },
                        new
                        {
                            EmployeeId = 2,
                            BranchId = 1,
                            DateOfDismissal = new DateTime(2011, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEmployment = new DateTime(2001, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ewa@wsei.edu.pl",
                            LastName = "Nowak",
                            Name = "Ewa",
                            PESEL = "10987654321",
                            Phone = "987654321",
                            Position = 2
                        },
                        new
                        {
                            EmployeeId = 3,
                            BranchId = 2,
                            DateOfEmployment = new DateTime(2005, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "adam@wsei.edu.pl",
                            LastName = "Trud",
                            Name = "Michał",
                            PESEL = "23456789012",
                            Phone = "234567891",
                            Position = 1
                        },
                        new
                        {
                            EmployeeId = 4,
                            BranchId = 2,
                            DateOfDismissal = new DateTime(2014, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOfEmployment = new DateTime(2007, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ewa@wsei.edu.pl",
                            LastName = "Nowak",
                            Name = "Ewa",
                            PESEL = "210987654321",
                            Phone = "198765432",
                            Position = 2
                        });
                });

            modelBuilder.Entity("Data.Entities.BranchEntity", b =>
                {
                    b.OwnsOne("Data.Entities.Address", "Address", b1 =>
                        {
                            b1.Property<int>("BranchEntityBranchId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Region")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("BranchEntityBranchId");

                            b1.ToTable("branches");

                            b1.WithOwner()
                                .HasForeignKey("BranchEntityBranchId");

                            b1.HasData(
                                new
                                {
                                    BranchEntityBranchId = 1,
                                    City = "Kraków",
                                    Country = "Polska",
                                    Number = "17",
                                    PostalCode = "31-150",
                                    Region = "małopolskie",
                                    Street = "Św. Filipa"
                                },
                                new
                                {
                                    BranchEntityBranchId = 2,
                                    City = "Warszawa",
                                    Country = "Polska",
                                    Number = "45/6",
                                    PostalCode = "00-057",
                                    Region = "mazowieckie",
                                    Street = "Krowoderska"
                                });
                        });

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Data.Entities.EmployeeEntity", b =>
                {
                    b.HasOne("Data.Entities.BranchEntity", "Branch")
                        .WithMany("Employees")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Data.Entities.BranchEntity", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
